module(
    name = "bazel_python_helloworld",
    version = "v1.0.0",
    compatibility_level = 1,
)

bazel_dep(
    name = "aspect_bazel_lib",
    version = "2.7.7",
    dev_dependency = True,
)
bazel_dep(
    name = "buildifier_prebuilt",
    version = "6.4.0",
    dev_dependency = True,
)
bazel_dep(
    name = "platforms",
    version = "0.0.11",
    dev_dependency = True,
)

#bazel_dep(
#    name = "rules_go",
#    version = "0.54.0",
#    dev_dependency = True,
#    #repo_name = "rules_go"
#)
bazel_dep(
    name = "rules_python",
    version = "1.4.0",
    dev_dependency = True,
    #repo_name = "rules_python"
)

#bazel_dep(
#    name = "rules_python_gazelle_plugin",
#    version = "1.4.0",
#)
#
#bazel_dep(
#    name = "gazelle",
#    version = "0.43.0",
#    dev_dependency = True,
#)  #, repo_name = "bazel_gazelle")
#
bazel_dep(
    name = "bazel_skylib",
    version = "1.7.1",
)

pip = use_extension("@rules_python//python/extensions:pip.bzl", "pip")
pip.parse(
    hub_name = "pip",
    # When using Gazelle, you must set the following flag
    # for the generation of gazelle dependency resolution.
    #incompatible_generate_aliases = True,
    python_version = "3.13",
    requirements_lock = "//:requirements_lock_3_13.txt",
    #requirements_windows = "//:requirements_windows.txt",
)
use_repo(pip, "pip")

# Import the Python repositories generated by the given module extension into the scope of the current module.
python = use_extension("@rules_python//python/extensions:python.bzl", "python")
python.toolchain(
    configure_coverage_tool = True,
    ignore_root_user_error = True,
    is_default = True,
    python_version = "3.13",
)
use_repo(python, "python_3_13", "python_versions", "pythons_hub")

#register_toolchains(
#    "@python_toolchains//:all",
#)

#go_sdk = use_extension("@rules_go//go:extensions.bzl", "go_sdk")
#
### You can register multiple Go SDKs and select which one to use on a per-target basis using go_cross_binary.
#go_sdk.download(version = "1.24.0")
#
## Register the Go SDK installed on the host.
#go_sdk.host()
